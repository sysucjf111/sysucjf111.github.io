<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>编译一个osquery-go扩展的流程</title>
    <link href="/2022/06/23/%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AAosquery-go%E6%89%A9%E5%B1%95%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
    <url>/2022/06/23/%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AAosquery-go%E6%89%A9%E5%B1%95%E7%9A%84%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>参考<a href="https://github.com/osquery/osquery-go">https://github.com/osquery/osquery-go</a> </p><p>结合多种参考资料对官方给出的extension编译流程进行修改以及补充.</p><h1 id="osquery-go拓展的编译和部署"><a href="#osquery-go拓展的编译和部署" class="headerlink" title="osquery go拓展的编译和部署"></a>osquery go拓展的编译和部署</h1><p>假如已经写好了一个go拓展，快速验证它是否生效的方法：</p><p>MobaXTerm中，先在一个session启动osqueryi，然后查看osqueryi的socket：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">root@cjf:~/osquery# osqueryi --nodisable<span class="hljs-emphasis">_extensions</span><br><span class="hljs-emphasis">Using a virtual database. Need help, type &#x27;.help&#x27;</span><br><span class="hljs-emphasis">osquery&gt; select value from osquery_flags where name = &#x27;extensions_</span>socket&#x27;;<br><span class="hljs-code">+-------------------------+</span><br><span class="hljs-section">| value                   |</span><br><span class="hljs-section">+-------------------------+</span><br><span class="hljs-section">| /root/.osquery/shell.em |</span><br><span class="hljs-section">+-------------------------+</span><br><br></code></pre></td></tr></table></figure><p>打开另一个session，执行<code>go run ./my.go --socket /root/.osquery/shell.em</code>，当前session会进入阻塞状态。</p><p>回到之前的session。查看是否已经存在新创建表，并查看表的内容：</p><p><img src="https://raw.githubusercontent.com/sysucjf111/picbed/main/image-20220622170243861-16559575786341.png" alt="image-20220622170243861-16559575786341"></p><p>在windows上则可以使用goland编写my.go，运行然后再终端中打开osqueryi验证。便于调试。</p><p>如果直接要将go编译生成.ext文件作为osqueryi的CLI取值传入osquery中，就要对示例代码进行如下修改(注释掉示例代码中的部分，因为不能从os.Args中获取socket连接值了)，参考<a href="https://blog.spoock.com/2019/03/17/osquery-extension/%EF%BC%9A">https://blog.spoock.com/2019/03/17/osquery-extension/：</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// socket := flag.String(&quot;socket&quot;, &quot;&quot;, &quot;Path to osquery socket file&quot;)</span><br><span class="hljs-comment">// flag.Parse()</span><br><span class="hljs-comment">// if *socket == &quot;&quot; &#123;</span><br><span class="hljs-comment">// log.Fatalf(`Usage: %s --socket SOCKET_PATH`, os.Args[0])</span><br><span class="hljs-comment">// &#125;</span><br><br><br><span class="hljs-comment">// server, err := osquery.NewExtensionManagerServer(&quot;foobar&quot;, *socket)</span><br>server, err := osquery.NewExtensionManagerServer(<span class="hljs-string">&quot;foobar&quot;</span>, <span class="hljs-string">&quot;/root/.osquery/shell.em&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Error creating extension: %s\n&quot;</span>, err)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>若如此做则需要一个CLI来确定extention的shell：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">osqueryi <span class="hljs-params">--extension</span> my.ext <span class="hljs-params">--extensions_socket=/root/</span><span class="hljs-string">.osquery/shell.em</span><br></code></pre></td></tr></table></figure><p>如果extension注册成功，会出现如下提示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">I0622</span> <span class="hljs-number">18</span>:<span class="hljs-number">04</span>:<span class="hljs-number">43</span>.<span class="hljs-number">414388</span> <span class="hljs-number">30545</span> interface.cpp:<span class="hljs-number">105</span>] Registering extension (foobar, <span class="hljs-number">60326</span>, version=, sdk=)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/sysucjf111/picbed/main/image-20220622181154284.png" alt="image-20220622181154284"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>osquery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/06/16/hello-world/"/>
    <url>/2022/06/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
